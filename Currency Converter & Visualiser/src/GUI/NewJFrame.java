/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author marjo
 */


public class NewJFrame extends javax.swing.JFrame {
        


    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        result1 = new javax.swing.JTextField();
        result2 = new javax.swing.JTextField();
        currency1 = new javax.swing.JComboBox<>();
        currency2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        convert = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        graphRepresentationPanel = new javax.swing.JPanel();
        currency3 = new javax.swing.JComboBox<>();
        currency4 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        buildChart = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        org.jdesktop.layout.GroupLayout jDialog1Layout = new org.jdesktop.layout.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Currency Converter");
        setResizable(false);

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, null, new java.awt.Color(255, 0, 102)));
        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTabbedPane1.setName("Conversion"); // NOI18N

        jPanel1.setLayout(null);

        result1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        result1.setText("1");
        result1.setToolTipText("Enter nr you to be converted(you can use either fields)");
        result1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                result1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                result1MousePressed(evt);
            }
        });
        result1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                result1ActionPerformed(evt);
            }
        });
        jPanel1.add(result1);
        result1.setBounds(40, 190, 138, 60);

        result2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        result2.setText("121.8");
        result2.setToolTipText("Enter nr you to be converted(you can use either fields)");
        result2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                result2MousePressed(evt);
            }
        });
        result2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                result2ActionPerformed(evt);
            }
        });
        jPanel1.add(result2);
        result2.setBounds(270, 190, 138, 60);

        currency1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EUR", "ALL", "GBP", "USD" }));
        currency1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currency1ActionPerformed(evt);
            }
        });
        jPanel1.add(currency1);
        currency1.setBounds(30, 30, 138, 52);

        currency2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "EUR", "USD", "GBP", " " }));
        jPanel1.add(currency2);
        currency2.setBounds(270, 30, 138, 54);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/convertIconJavaSmall.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(190, 110, 55, 52);

        convert.setText("Convert");
        convert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                convertMouseClicked(evt);
            }
        });
        convert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertActionPerformed(evt);
            }
        });
        jPanel1.add(convert);
        convert.setBounds(320, 290, 93, 29);

        clear.setEnabled(false);
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel1.add(clear);
        clear.setBounds(40, 290, 69, 29);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/ezgif.com-resize (1).gif"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(40, 0, 440, 380);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(null);
        jPanel1.add(jPanel2);
        jPanel2.setBounds(-20, 0, 510, 400);

        jTabbedPane1.addTab("Conversion", jPanel1);

        currency3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EUR", "ALL", "GBP", "USD" }));
        currency3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currency3ActionPerformed(evt);
            }
        });

        currency4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "EUR", "USD", "GBP", " " }));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/convertIconJavaSmall.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        buildChart.setText("Build Chart");
        buildChart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buildChartMouseClicked(evt);
            }
        });
        buildChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildChartActionPerformed(evt);
            }
        });

        jButton3.setText("Save Chart as PNG");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout graphRepresentationPanelLayout = new org.jdesktop.layout.GroupLayout(graphRepresentationPanel);
        graphRepresentationPanel.setLayout(graphRepresentationPanelLayout);
        graphRepresentationPanelLayout.setHorizontalGroup(
            graphRepresentationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(graphRepresentationPanelLayout.createSequentialGroup()
                .add(graphRepresentationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(graphRepresentationPanelLayout.createSequentialGroup()
                        .add(188, 188, 188)
                        .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 55, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(33, 33, 33)
                        .add(currency4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(graphRepresentationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(buildChart, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 151, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jButton3)))
                .addContainerGap(42, Short.MAX_VALUE))
            .add(graphRepresentationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(graphRepresentationPanelLayout.createSequentialGroup()
                    .add(0, 18, Short.MAX_VALUE)
                    .add(currency3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 300, Short.MAX_VALUE)))
        );
        graphRepresentationPanelLayout.setVerticalGroup(
            graphRepresentationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(graphRepresentationPanelLayout.createSequentialGroup()
                .add(28, 28, 28)
                .add(graphRepresentationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(currency4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 141, Short.MAX_VALUE)
                .add(graphRepresentationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(buildChart)
                    .add(jButton3))
                .add(147, 147, 147))
            .add(graphRepresentationPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(graphRepresentationPanelLayout.createSequentialGroup()
                    .add(0, 28, Short.MAX_VALUE)
                    .add(currency3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 319, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Graph Representation", graphRepresentationPanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jTabbedPane1)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void currency1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currency1ActionPerformed

    }//GEN-LAST:event_currency1ActionPerformed

    private void result1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_result1ActionPerformed
    
    }//GEN-LAST:event_result1ActionPerformed

    private void result1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_result1MouseClicked
       
     

    }//GEN-LAST:event_result1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String txt1 = (String)currency1.getSelectedItem();
        String txt2 = (String)currency2.getSelectedItem();
        currency1.setSelectedItem(txt2);
        currency2.setSelectedItem(txt1);
            
    }//GEN-LAST:event_jButton1ActionPerformed

    private void result2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_result2ActionPerformed
        
  
    }//GEN-LAST:event_result2ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1MouseClicked

    private void result1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_result1MousePressed
        clear.setEnabled(true);
    }//GEN-LAST:event_result1MousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
      
    }//GEN-LAST:event_jButton1MousePressed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        result1.setText("");
        result2.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void convertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertActionPerformed

        EUR EUR = new EUR();
        USD USD = new USD();
        ALL ALL = new ALL();
        GBP GBP = new GBP();  
//        Double Double.parseDouble(result1.getText()) = Double.parseDouble(result1.getText());  //Convert entered nr to double
        double secondresult;    //Create container for calc between 2 currencies
        

String txt1 = (String)result1.getText();
String txt2 = (String)result2.getText();

try{
if ("".equals(txt1) && "".equals(txt2)){
    JOptionPane.showMessageDialog(null, "Input a nr in txtArea");

//EURO TO EVERYTHING ELSE
        }else if("EUR".equals(currency1.getSelectedItem().toString()) && "USD".equals(currency2.getSelectedItem().toString())){ 
             secondresult = Double.parseDouble(result1.getText()) * EUR.getRateToUSD();
            result2.setText(String.valueOf(secondresult));
            
        }else if("USD".equals(currency1.getSelectedItem().toString()) && "EUR".equals(currency2.getSelectedItem().toString())){ 
             secondresult = Double.parseDouble(result1.getText()) * USD.getRateToEUR();
                        result2.setText(String.valueOf(secondresult));
            
/*breathe
--------------------------------------------------------------------------------*/

        }else if(currency1.getSelectedItem().toString() == "EUR" && currency2.getSelectedItem().toString() == "ALL"){ 
             secondresult = Double.parseDouble(result1.getText()) * EUR.getRateToALL();
                        result2.setText(String.valueOf(secondresult));
            
        }else if(currency1.getSelectedItem().toString() == "ALL" && currency2.getSelectedItem().toString() == "EUR"){ 
             secondresult = Double.parseDouble(result1.getText()) * ALL.getRateToEUR();
                        result2.setText(String.valueOf(secondresult));
            
            /*breathe
--------------------------------------------------------------------------------*/
            
        }else if(currency1.getSelectedItem().toString() == "EUR" && currency2.getSelectedItem().toString() == "GBP"){ 
             secondresult = Double.parseDouble(result1.getText()) * EUR.getRateToGBP();
            result2.setText(String.valueOf(secondresult));
            
        }else if(currency1.getSelectedItem().toString() == "GBP" && currency2.getSelectedItem().toString() == "EUR"){ 
             secondresult = Double.parseDouble(result1.getText()) * GBP.getRateToEUR();
                        result2.setText(String.valueOf(secondresult));
        
/*breathe
--------------------------------------------------------------------------------*/
//USD to ALL, GBP
        }else if(currency1.getSelectedItem().toString() == "USD" && currency2.getSelectedItem().toString() == "ALL"){ 
             secondresult = Double.parseDouble(result1.getText()) * USD.getRateToALL();
                        result2.setText(String.valueOf(secondresult));
                        
        }else if(currency1.getSelectedItem().toString() == "ALL" && currency2.getSelectedItem().toString() == "USD"){ 
             secondresult = Double.parseDouble(result1.getText()) * ALL.getRateToUSD();
                        result2.setText(String.valueOf(secondresult));
                            
/*breathe
--------------------------------------------------------------------------------*/
        }else if(currency1.getSelectedItem().toString() == "USD" && currency2.getSelectedItem().toString() == "GBP"){ 
             secondresult = Double.parseDouble(result1.getText()) * USD.getRateToGBP();
                        result2.setText(String.valueOf(secondresult));
                        
        }else if(currency1.getSelectedItem().toString() == "GBP" && currency2.getSelectedItem().toString() == "USD"){ 
             secondresult = Double.parseDouble(result1.getText()) * GBP.getRateToUSD();
                        result2.setText(String.valueOf(secondresult));
                        
        

                            
/*breathe
--------------------------------------------------------------------------------*/
//ALL to GBP
    }else if(currency1.getSelectedItem().toString() == "ALL" && currency2.getSelectedItem().toString() == "GBP"){ 
             secondresult = Double.parseDouble(result1.getText()) * ALL.getRateToGBP();
                        result2.setText(String.valueOf(secondresult));
                        
        }else if(currency1.getSelectedItem().toString() == "GBP" && currency2.getSelectedItem().toString() == "ALL"){ 
             secondresult = Double.parseDouble(result1.getText()) * GBP.getRateToALL();
                        result2.setText(String.valueOf(secondresult));
                        
        }
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Try to type a number ;)");
                }
                        
  
         //END CONVERT BUTTON
    }//GEN-LAST:event_convertActionPerformed
    

    
    private void convertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_convertMouseClicked

    }//GEN-LAST:event_convertMouseClicked

    private void result2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_result2MousePressed
       clear.setEnabled(true);
    }//GEN-LAST:event_result2MousePressed

    
    
    private void currency3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currency3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_currency3ActionPerformed

    private void buildChartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buildChartMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buildChartMouseClicked

    private void buildChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildChartActionPerformed
                
if("EUR".equals(currency3.getSelectedItem().toString()) && "USD".equals(currency4.getSelectedItem().toString())){ 

    SqlCharteurotousd sql = new SqlCharteurotousd();

}else if("USD".equals(currency3.getSelectedItem().toString()) && "EUR".equals(currency4.getSelectedItem().toString())){ 

    SqlChartusdtoeuro sql = new SqlChartusdtoeuro();
/*breathe
--------------------------------------------------------------------------------*/
}else if("EUR".equals(currency3.getSelectedItem().toString()) && "ALL".equals(currency4.getSelectedItem().toString())){ 

    SqlCharteurotoall sql;
    sql = new SqlCharteurotoall();

}else if(currency1.getSelectedItem().toString() == "ALL" && currency2.getSelectedItem().toString() == "EUR"){ 


    /*breathe
--------------------------------------------------------------------------------*/

}else if(currency1.getSelectedItem().toString() == "EUR" && currency2.getSelectedItem().toString() == "GBP"){ 


}else if(currency1.getSelectedItem().toString() == "GBP" && currency2.getSelectedItem().toString() == "EUR"){ 


/*breathe
--------------------------------------------------------------------------------*/
//USD to ALL, GBP
}else if(currency1.getSelectedItem().toString() == "USD" && currency2.getSelectedItem().toString() == "ALL"){ 


}else if(currency1.getSelectedItem().toString() == "ALL" && currency2.getSelectedItem().toString() == "USD"){ 


/*breathe
--------------------------------------------------------------------------------*/
}else if(currency1.getSelectedItem().toString() == "USD" && currency2.getSelectedItem().toString() == "GBP"){ 

}else if(currency1.getSelectedItem().toString() == "GBP" && currency2.getSelectedItem().toString() == "USD"){ 

/*breathe
--------------------------------------------------------------------------------*/
//ALL to GBP
    }else if(currency3.getSelectedItem().toString() == "ALL" && currency4.getSelectedItem().toString() == "GBP"){ 

        SqlChartalltogbp sql = new SqlChartalltogbp();
        
        }else if(currency1.getSelectedItem().toString() == "GBP" && currency2.getSelectedItem().toString() == "ALL"){ 
            
        }
    }//GEN-LAST:event_buildChartActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MousePressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String txt3 = (String)currency3.getSelectedItem();
        String txt4 = (String)currency4.getSelectedItem();
        currency3.setSelectedItem(txt4);
        currency4.setSelectedItem(txt3);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
      
//saves graphs as images on project folder under-> C:\Users\marjo\Documents\NetBeansProjects\sqlChart
        
       int dialog = JOptionPane.showConfirmDialog(this, "Save graph as PNG?");
       //if user clicked yes and jComboBoxes equal to Eur & Usd, saves PNG of this Graph
        if(dialog==JOptionPane.YES_OPTION && ("EUR".equals(currency3.getSelectedItem().toString()) && "USD".equals(currency4.getSelectedItem().toString()))){
            try {
                //creates constructor from SqlCharteurotousd class that has a method to save file as PNG
            SqlCharteurotousd saveAsPNGeuroToUSD = new SqlCharteurotousd("saveAsPNG");
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } 
        //if user clicked yes and jComboBoxes equal to Eur & All, saves PNG of this Graph
        }else if(dialog==JOptionPane.YES_OPTION && ("EUR".equals(currency3.getSelectedItem().toString()) && "ALL".equals(currency4.getSelectedItem().toString()))){
            try {
                //creates constructor from SqlCharteurotoall class that has a method to save file as PNG
            SqlCharteurotoall saveAsPNGeuroToALL = new SqlCharteurotoall("saveAsPNG");
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
           } 
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buildChart;
    private javax.swing.JButton clear;
    private javax.swing.JButton convert;
    private javax.swing.JComboBox<String> currency1;
    private javax.swing.JComboBox<String> currency2;
    private javax.swing.JComboBox<String> currency3;
    private javax.swing.JComboBox<String> currency4;
    private javax.swing.JPanel graphRepresentationPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField result1;
    private javax.swing.JTextField result2;
    // End of variables declaration//GEN-END:variables
}
